#!/usr/bin/env python
# A demo on ST7920 128x64 LCD with hardware SPI on Raspberry Pi using spidev.
#
# Wiring:
# LCD   GPIO (BCM)
# ---   ----------
# GND - GND
# VCC - +5V
# VO  - +5V 10K potentionmeter for contrast adjust (optional)
# RS  - 8  (SPI0 CE0)
# R/W - 10 (SPI0 MOSI)
# E   - 11 (SPI0 SCLK)
# PSB - GND (set SPI mode)
# RST - 25
# BLA - 24
# BLK - GND
# 
# Note that all SPI pins MUST be set to ALT0 mode to use the hardware clock
# (spidev).
#
# All delay arguments are in us (micro second).
from time import sleep
import spidev

# Serial transmission speed in Hz. Set to 1.93Mhz to be safe, but 15.6Mhz
# (15600000Hz) tested working well on a Raspberry Pi Zero W.
# on Raspberry Pi Zero W.
SPI_SPEED = 1953000

def sendByte(byte, delay = 72):
	"""Send given byte to LCD's RAM. A default delay of 72us is required."""
	# A byte is sent as a pair of bytes:
	# - First byte contains the 4 MSB and 4 "0".
	# - Second byte contains the 4 LSB and 4 "0".
	spiWriteBytes([0xF0 & byte, 0xF0 & (byte << 4)], SPI_SPEED, delay, 8)

def startCmd(delay = 0):
	# A transmission begin with a start byte, which consists of:
	# - 5 "1" bits.
	# - Direction bit: "0" for writing (this function), "1" for reading.
	# - Register select bit: "0" for command, "1" for data.
	# - 1 "0" bit.
	spiWriteBytes([0xF8], SPI_SPEED, delay, 8)

def startData(delay = 0):
	# A transmission begin with a start byte, which consists of:
	# - 5 "1" bits.
	# - Direction bit: "0" for writing (this function), "1" for reading.
	# - Register select bit: "0" for command, "1" for data.
	# - 1 "0" bit.
	spiWriteBytes([0xFA], SPI_SPEED, delay, 8)

def init():
	startCmd()
	sendByte(0x30)   # Basic function set (8 bit).
	sendByte(0x0C)   # Display on, cursor off, blinking off.
	sendByte(0x06)   # No cursor or shift operation.
	sendByte(0x01, 1600) # Clear screen and reset AC (need 1.6ms to complete).

def clear():
	startCmd()
	sendByte(0x01, 1600) # Clear screen and reset AC (need 1.6ms to complete).

def printText(text):
	"""Print the given text at the current position"""
	startData()
	for c in text:
		sendByte(ord(c))

def setCursor(line, col): 
	"""Position text caret at the given line (1..4) and column (1..16)"""
	addr = 0x80
	if line == 2: 
		addr = 0x90
	elif line == 3:
		addr = 0x88
	elif line == 4: 
		addr = 0x98
	# HCGROM has 2 characters in on write address.
	addr += (col - 1) // 2
	startCmd()
	sendByte(addr)

# Set up spidev.
spi = spidev.SpiDev()
spi.open(0, 0)
spi.max_speed_hz = SPI_SPEED
spi.no_cs = True
spiWriteBytes = spi.xfer2
init()
printText("Loading... s")
for n in range(3, -1, -1):
	setCursor(1, 11)
	printText(str(n))
	sleep(1)
msg = [
		"Hello friend ^_^",
		"Im an 128x16 LCD",
		"Drived by ST7920",
		"Python hw spidev"
		]
for l in range(len(msg)):
	setCursor(l + 1, 1)
	startData()
	for c in msg[l]:
		sendByte(ord(c))
	sleep(0.5)
sleep(2)
clear()
setCursor(2, 1)
printText("End of demo.")
setCursor(3, 1)
printText("Have a nice day!")
spi.close()
